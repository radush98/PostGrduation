K = [10, 15, 6, 124, 88, 168, 205, 96, 187, 99, 209, 254, 22, 145, 229, 183, 28, 23, 77, 27, 185, 222, 113, 105, 112, 226, 207, 136, 162, 246, 132, 39, 36, 94, 40, 45, 239, 66, 122, 138, 243, 220, 153, 65, 199, 149, 52, 179, 111, 57, 62, 53, 83, 75, 155, 252, 237, 170, 82, 192, 166, 5, 128, 212, 67, 74, 176, 78, 236, 1, 164, 156, 167, 21, 50, 255, 213, 41, 251, 90, 91, 129, 95, 80, 18, 181, 173, 253, 38, 3, 204, 180, 58, 200, 107, 230, 146, 108, 97, 104, 134, 190, 206, 35, 16, 221, 133, 55, 217, 120, 247, 11, 125, 114, 121, 163, 143, 223, 48, 151, 238, 150, 4, 33, 73, 196, 24, 234, 142, 244, 130, 135, 69, 232, 208, 32, 89, 118, 51, 235, 109, 63, 158, 25, 197, 147, 148, 159, 249, 225, 49, 86, 71, 0, 248, 106, 12, 175, 42, 126, 160, 165, 172, 214, 242, 2, 103, 202, 17, 201, 123, 84, 188, 59, 79, 29, 182, 189, 231, 177, 19, 116, 219, 195, 218, 72, 101, 34, 8, 92, 46, 141, 56, 198, 203, 194, 44, 20, 100, 137, 186, 119, 47, 157, 115, 210, 93, 161, 215, 216, 211, 9, 37, 117, 154, 61, 68, 60, 174, 139, 227, 110, 178, 64, 233, 224, 26, 228, 70, 171, 14, 54, 13, 191, 152, 85, 127, 131, 81, 240, 241, 43, 245, 250, 184, 31, 7, 87, 140, 169, 102, 30, 144, 98, 193, 76]

mobius = [
    94, 30, 171, 84, 96, 215, 28, 246, 3, 216, 245, 255, 152, 86, 31, 180,
    118, 208, 184, 237, 204, 112, 185, 109, 183, 182, 76, 159, 19, 149, 44, 239,
    123, 173, 103, 12, 195, 154, 63, 244, 256, 188, 65, 130, 18, 194, 38, 72,
    162, 45, 78, 137, 119, 83, 165, 98, 27, 142, 249, 125, 100, 238, 120, 199,
    9, 7, 20, 200, 174, 42, 243, 136, 91, 102, 52, 139, 242, 117, 213, 59,
    60, 47, 232, 43, 145, 181, 114, 167, 229, 8, 150, 221, 172, 132, 23, 210,
    192, 231, 35, 69, 22, 115, 201, 151, 247, 193, 222, 39, 54, 178, 56, 85,
    138, 104, 214, 48, 107, 175, 240, 108, 16, 21, 17, 141, 62, 88, 74, 14,
    61, 248, 226, 144, 90, 95, 71, 202, 10, 81, 53, 163, 110, 254, 75, 32,
    11, 224, 101, 129, 177, 253, 111, 37, 24, 33, 140, 131, 113, 2, 155, 206,
    68, 197, 66, 147, 6, 79, 189, 25, 187, 49, 134, 5, 64, 146, 241, 70,
    217, 168, 124, 205, 158, 170, 143, 209, 207, 191, 223, 196, 15, 51, 50, 169,
    153, 73, 36, 160, 127, 219, 87, 122, 135, 55, 97, 41, 190, 233, 126, 157,
    13, 133, 121, 235, 1, 252, 93, 34, 251, 211, 212, 179, 92, 106, 67, 82,
    29, 99, 234, 148, 227, 176, 225, 203, 40, 198, 105, 220, 58, 4, 250, 166,
    186, 26, 218, 156, 161, 236, 164, 57, 128, 46, 89, 228, 230, 77, 116, 80
]

V = []
K1 = []

def find_pos_min(f1, f2):
    length = len(f1)
    f = [f2 for i in range(length)]
    diff = [abs(f1[i] - f[i]) for i in range(length)]
    return diff.index(min(diff))

def logisticFragment(yk, p):
    return p * yk * (1 - yk)

def logistic(y0, p):
    map = [y0]
    for i in range(255):
        yk = logisticFragment(map[len(map) - 1], p)
        map.append(yk)

    return map

def calcChaotic():
    i = 0
    x0 = 0.5
    x1 = 0.6

    k0 = 3.99234689
    k1 = 3.99777777

    f1 = logistic(x0, k0)
    y = logistic(x1, k1)

    while i < 256:
        pos_min = find_pos_min(f1, y[154])
        p = 0

        for j in range(len(V)):
            if pos_min == V[j]:
                p = 1
        
        if p == 0:
            V.append(pos_min)
            K1.append(K[pos_min])
            x1 = 0.9 * x1 + 0.1 * K[pos_min]/255
            y = logistic(x1, k1)
            i = i + 1
        else:
            x0 = 0.9 * x0 + 0.1 * K[pos_min]/255
            f1 = logistic(x0, k0)
        

calcChaotic()

Km = [0 for i in range(256)]

for i in range (256):
    Km[mobius[i] - 1] = K1[i]

res = [0 for i in range(256)]

for i in range (256):
    res[K[i] - 1] = Km[i]